// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 1`] = `""`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 2`] = `""`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 3`] = `""`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 4`] = `""`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 5`] = `""`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 6`] = `""`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 7`] = `""`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 8`] = `""`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 9`] = `""`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 10`] = `""`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 11`] = `Array []`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions maps state and dispatch to props 12`] = `null`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions should also run HANDLE_DATE_CHANGE action with payload 1`] = `
Array [
  Object {
    "payload": Object {
      "date": "2018-11-11",
      "selectedDate": "2018-11-10T23:00:00.000Z",
    },
    "type": "HANDLE_DATE_CHANGE",
  },
  Object {
    "type": "RESET_APPLICATION_FORM_SUBMIT_INFO",
  },
]
`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions should also run HANDLE_FORM_CHANGE action with payload and RESET_APPLICATION_FORM_SUBMIT_INFO  1`] = `
Array [
  Object {
    "type": "RESET_APPLICATION_FORM",
  },
  Object {
    "payload": Object {
      "name": "firstName",
      "value": "John",
    },
    "type": "HANDLE_FORM_CHANGE",
  },
  Object {
    "type": "RESET_APPLICATION_FORM_SUBMIT_INFO",
  },
]
`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions should run  RESET_APPLICATION_FORM action and  SUBMIT_APPLICATION_FORM_FAILURE action form with errors payload  1`] = `
Array [
  Object {
    "type": "RESET_APPLICATION_FORM",
  },
  Object {
    "payload": Object {
      "dateErr": "Requires date",
      "emailErr": "Requires valid email",
      "firstNameErr": "Requires first name",
      "lastNameErr": "Requires last name",
    },
    "type": "VALIDATION_APPLICATION_FORM_FAILURE",
  },
]
`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions should run FETCH_APPLICATION_HAPPENING with payload 1`] = `
Array [
  Object {
    "payload": Object {
      "avaibleDates": Array [
        "2018-11-10T23:00:00.000Z",
      ],
      "date": "2018-11-11",
      "selectedDate": "2018-11-10T23:00:00.000Z",
      "title": "Sign up for Happening Name",
    },
    "type": "FETCH_APPLICATION_HAPPENING_SUCCES",
  },
]
`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions should run RESET_APPLICATION_FORM action on componentWillMount() 1`] = `
Array [
  Object {
    "type": "RESET_APPLICATION_FORM",
  },
]
`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions should submit form, pass validation and  and use SUBMIT_APPLICATION_FORM_FAILURE action with payload due to emial validation on api  1`] = `
Array [
  Object {
    "type": "VALIDATION_APPLICATION_FORM_SUCCES",
  },
  Object {
    "payload": "The provided email is invalid!",
    "type": "SUBMIT_APPLICATION_FORM_FAILURE",
  },
]
`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions should submit form, pass validation and  and use SUBMIT_APPLICATION_FORM_FAILURE action with payload due to other error  1`] = `
Array [
  Object {
    "type": "VALIDATION_APPLICATION_FORM_SUCCES",
  },
  Object {
    "payload": "Form has not been saved correctly! Please check the connection.",
    "type": "SUBMIT_APPLICATION_FORM_FAILURE",
  },
]
`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions should submit form, pass validation and  and use SUBMIT_APPLICATION_FORM_FAILURE action with payload due to user was signed in with that email  1`] = `
Array [
  Object {
    "type": "VALIDATION_APPLICATION_FORM_SUCCES",
  },
  Object {
    "payload": "This email is already signed up for this event!",
    "type": "SUBMIT_APPLICATION_FORM_FAILURE",
  },
]
`;

exports[`ApplicationForm-container, integration tests betwen container,component and actions should submit valid form and use SUBMIT_APPLICATION_FORM_SUCCES action with payload  1`] = `
Array [
  Object {
    "type": "VALIDATION_APPLICATION_FORM_SUCCES",
  },
]
`;
